// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// DataFrameExample
List DataFrameExample(const DataFrame& DF);
RcppExport SEXP RcppExamples_DataFrameExample(SEXP DFSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const DataFrame& >::type DF(DFSEXP);
    rcpp_result_gen = Rcpp::wrap(DataFrameExample(DF));
    return rcpp_result_gen;
END_RCPP
}
// DateExample
List DateExample(DateVector& dv, DatetimeVector& dtv);
RcppExport SEXP RcppExamples_DateExample(SEXP dvSEXP, SEXP dtvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DateVector& >::type dv(dvSEXP);
    Rcpp::traits::input_parameter< DatetimeVector& >::type dtv(dtvSEXP);
    rcpp_result_gen = Rcpp::wrap(DateExample(dv, dtv));
    return rcpp_result_gen;
END_RCPP
}
// ListExamples
List ListExamples(const List& rparam);
RcppExport SEXP RcppExamples_ListExamples(SEXP rparamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type rparam(rparamSEXP);
    rcpp_result_gen = Rcpp::wrap(ListExamples(rparam));
    return rcpp_result_gen;
END_RCPP
}
// MatrixExample
List MatrixExample(const NumericMatrix& orig);
RcppExport SEXP RcppExamples_MatrixExample(SEXP origSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type orig(origSEXP);
    rcpp_result_gen = Rcpp::wrap(MatrixExample(orig));
    return rcpp_result_gen;
END_RCPP
}
// NumericVectorExample
List NumericVectorExample(const NumericVector& orig);
RcppExport SEXP RcppExamples_NumericVectorExample(SEXP origSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type orig(origSEXP);
    rcpp_result_gen = Rcpp::wrap(NumericVectorExample(orig));
    return rcpp_result_gen;
END_RCPP
}
// RcppRNGs
DataFrame RcppRNGs(const int n);
RcppExport SEXP RcppExamples_RcppRNGs(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppRNGs(n));
    return rcpp_result_gen;
END_RCPP
}
// StringVectorExample
List StringVectorExample(const StringVector& orig);
RcppExport SEXP RcppExamples_StringVectorExample(SEXP origSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const StringVector& >::type orig(origSEXP);
    rcpp_result_gen = Rcpp::wrap(StringVectorExample(orig));
    return rcpp_result_gen;
END_RCPP
}
